openapi: 3.0.1
info:
  title: IDF PAAM
  description: IDF Profile and Audit Management
  contact:
    email: rob.breault@identityfusion.com
  version: 1.0.2
servers:
  - url: https://admin.idfcloud.net/
tags:
  - name: Config - Init
    description: Initial Client Configuration Endpoints
  - name: Config - Audit
    description: Client Audit Configuration Endpoints
  - name: Config - Lang
    description: Client Language Configuration Endpoints
  - name: Config - Schema
    description: Client Schema Configuration Endpoints
  - name: Config - Theme
    description: Client Schema Configuration Endpoints
  - name: Config Management (Admin Only)
    description: Admin Configuration Management Endpoints
  - name: Config - Init (Admin Only)
    description: Admin Client Configuration Endpoints
  - name: Config - Audit (Admin Only)
    description: Admin Audit Configuration Endpoints
  - name: Config - Lang (Admin Only)
    description: Admin Language Configuration Endpoints
  - name: Config - Schema (Admin Only)
    description: Admin Schema Configuration Endpoints
  - name: Config - Theme (Admin Only)
    description: Admin Theme Configuration Endpoints
  - name: Audit
    description: Audit Endpoint
paths:
  /config:
    get:
      tags:
        - Config Management (Admin Only)
      summary: Get all configs (ADMIN ONLY)
      description: Returns all configs
      operationId: getAllConfigByIdAdmin
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListConfigs"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - admin_oauth2:
            - read
  /config/init:
    get:
      tags:
        - Config - Init
      summary: Get initial config based on hostname
      description: Returns a single config
      operationId: getInitConfigByHostname
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Operation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - client_oauth2:
            - read
    put:
      tags:
        - Config - Init
      summary: Update an existing initial config based on hostname
      operationId: putInitConfigByHostname
      requestBody:
        description: Config object that needs to be added
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfigInit"
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - client_oauth2:
            - write
            - read
      x-codegen-request-body-name: body
    patch:
      tags:
        - Config - Init
      summary: Update an existing initial config based on hostname
      operationId: patchInitConfigByHostname
      requestBody:
        description: Patch object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchObject"
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Operation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - admin_oauth2:
            - write
            - read
      x-codegen-request-body-name: body
    post:
      tags:
        - Config - Init (Admin Only)
      summary: Create a new client config (ADMIN ONLY)
      operationId: postInitCreateClientAdmin
      requestBody:
        description: Client config object that needs to be added
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfigInit"
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - admin_oauth2:
            - read
            - write
      x-codegen-request-body-name: body
  /config/audit:
    get:
      tags:
        - Config - Audit
      summary: Get config based on header hostname
      description: Returns a single config
      operationId: getAuditConfigByHostname
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Operation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - client_oauth2:
            - read
    put:
      tags:
        - Config - Audit
      summary: Update an existing config based on hostname
      operationId: putAuditConfigByHostname
      requestBody:
        description: Config object that needs to be added
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfigInit"
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - client_oauth2:
            - write
            - read
      x-codegen-request-body-name: body
    patch:
      tags:
        - Config - Audit
      summary: Update an existing config based on hostname
      operationId: patchAuditConfigByHostname
      requestBody:
        description: Patch object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchObject"
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Operation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - admin_oauth2:
            - write
            - read
      x-codegen-request-body-name: body
    post:
      tags:
        - Config - Audit (Admin Only)
      summary: Create a new client config (ADMIN ONLY)
      operationId: postAuditCreateClientAdmin
      requestBody:
        description: Client config object that needs to be added
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfigInit"
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - admin_oauth2:
            - read
            - write
      x-codegen-request-body-name: body
  /config/lang:
    get:
      tags:
        - Config - Lang
      summary: Get config based on header hostname
      description: Returns a single config
      operationId: getLangConfigByHostname
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Operation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - client_oauth2:
            - read
    put:
      tags:
        - Config - Lang
      summary: Update an existing config based on hostname
      operationId: putLangConfigByHostname
      requestBody:
        description: Config object that needs to be added
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfigInit"
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - client_oauth2:
            - write
            - read
      x-codegen-request-body-name: body
    patch:
      tags:
        - Config - Lang
      summary: Update an existing config based on hostname
      operationId: patchLangConfigByHostname
      requestBody:
        description: Patch object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchObject"
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Operation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - admin_oauth2:
            - write
            - read
      x-codegen-request-body-name: body
    post:
      tags:
        - Config - Lang (Admin Only)
      summary: Create a new client config (ADMIN ONLY)
      operationId: postAuditCreateClientAdmin
      requestBody:
        description: Client config object that needs to be added
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfigInit"
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - admin_oauth2:
            - read
            - write
      x-codegen-request-body-name: body
  /config/schema:
    get:
      tags:
        - Config - Schema
      summary: Get config based on header hostname
      description: Returns a single config
      operationId: getSchemaConfigByHostname
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Operation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - client_oauth2:
            - read
    put:
      tags:
        - Config - Schema
      summary: Update an existing config based on hostname
      operationId: putSchemaConfigByHostname
      requestBody:
        description: Config object that needs to be added
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfigInit"
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - client_oauth2:
            - write
            - read
      x-codegen-request-body-name: body
    patch:
      tags:
        - Config - Schema
      summary: Update an existing config based on hostname
      operationId: patchSchemaConfigByHostname
      requestBody:
        description: Patch object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchObject"
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Operation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - admin_oauth2:
            - write
            - read
      x-codegen-request-body-name: body
    post:
      tags:
        - Config - Schema (Admin Only)
      summary: Create a new client config (ADMIN ONLY)
      operationId: postSchemaCreateClientAdmin
      requestBody:
        description: Client config object that needs to be added
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfigInit"
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - admin_oauth2:
            - read
            - write
      x-codegen-request-body-name: body
  /config/theme:
    get:
      tags:
        - Config - Theme
      summary: Get config based on header hostname
      description: Returns a single config
      operationId: getThemeConfigByHostname
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Operation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - client_oauth2:
            - read
    put:
      tags:
        - Config - Theme
      summary: Update an existing config based on hostname
      operationId: putThemeConfigByHostname
      requestBody:
        description: Config object that needs to be added
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfigInit"
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - client_oauth2:
            - write
            - read
      x-codegen-request-body-name: body
    patch:
      tags:
        - Config - Theme
      summary: Update an existing config based on hostname
      operationId: patchThemeConfigByHostname
      requestBody:
        description: Patch object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchObject"
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Operation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - admin_oauth2:
            - write
            - read
      x-codegen-request-body-name: body
    post:
      tags:
        - Config - Theme (Admin Only)
      summary: Create a new client config (ADMIN ONLY)
      operationId: postSchemaCreateClientAdmin
      requestBody:
        description: Client config object that needs to be added
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfigInit"
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - admin_oauth2:
            - read
            - write
      x-codegen-request-body-name: body
  /config/init/{client_id}:
    get:
      tags:
        - Config - Init (Admin Only)
      summary: Get config by ID (ADMIN ONLY)
      description: Returns a single config
      operationId: getInitConfigByIdAdmin
      parameters:
        - name: client_id
          in: path
          description: ID of config to return
          required: true
          schema:
            $ref: "#/components/schemas/ClientId"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - admin_oauth2:
            - write
            - read
    put:
      tags:
        - Config - Init (Admin Only)
      summary: Updates a config in the store (ADMIN ONLY)
      operationId: putInitConfigByIdAdmin
      parameters:
        - name: client_id
          in: path
          description: ID of config to return
          required: true
          schema:
            $ref: "#/components/schemas/ClientId"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - client_oauth2:
            - write
            - read
    patch:
      tags:
        - Config - Init (Admin Only)
      summary: Updates a config in the store (ADMIN ONLY)
      operationId: patchInitConfigByIdAdmin
      parameters:
        - name: client_id
          in: path
          description: ID of config to return
          required: true
          schema:
            $ref: "#/components/schemas/ClientId"
      requestBody:
        description: Patch object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchObject"
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - client_oauth2:
            - write
            - read
      x-codegen-request-body-name: body
  /config/audit/{client_id}:
    get:
      tags:
        - Config - Audit (Admin Only)
      summary: Get config by ID (ADMIN ONLY)
      description: Returns a single config
      operationId: getAuditConfigByIdAdmin
      parameters:
        - name: client_id
          in: path
          description: ID of config to return
          required: true
          schema:
            $ref: "#/components/schemas/ClientId"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - admin_oauth2:
            - write
            - read
    put:
      tags:
        - Config - Audit (Admin Only)
      summary: Updates a config in the store (ADMIN ONLY)
      operationId: putAuditConfigByIdAdmin
      parameters:
        - name: client_id
          in: path
          description: ID of config to return
          required: true
          schema:
            $ref: "#/components/schemas/ClientId"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - client_oauth2:
            - write
            - read
    patch:
      tags:
        - Config - Audit (Admin Only)
      summary: Updates a config in the store (ADMIN ONLY)
      operationId: patchAdminConfigByIdAdmin
      parameters:
        - name: client_id
          in: path
          description: ID of config to return
          required: true
          schema:
            $ref: "#/components/schemas/ClientId"
      requestBody:
        description: Patch object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchObject"
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - client_oauth2:
            - write
            - read
      x-codegen-request-body-name: body
  /config/lang/{client_id}:
    get:
      tags:
        - Config - Lang (Admin Only)
      summary: Get config by ID (ADMIN ONLY)
      description: Returns a single config
      operationId: getLangConfigByIdAdmin
      parameters:
        - name: client_id
          in: path
          description: ID of config to return
          required: true
          schema:
            $ref: "#/components/schemas/ClientId"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - admin_oauth2:
            - write
            - read
    put:
      tags:
        - Config - Lang (Admin Only)
      summary: Updates a config in the store (ADMIN ONLY)
      operationId: putLangConfigByIdAdmin
      parameters:
        - name: client_id
          in: path
          description: ID of config to return
          required: true
          schema:
            $ref: "#/components/schemas/ClientId"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - client_oauth2:
            - write
            - read
    patch:
      tags:
        - Config - Lang (Admin Only)
      summary: Updates a config in the store (ADMIN ONLY)
      operationId: patchLangConfigByIdAdmin
      parameters:
        - name: client_id
          in: path
          description: ID of config to return
          required: true
          schema:
            $ref: "#/components/schemas/ClientId"
      requestBody:
        description: Patch object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchObject"
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - client_oauth2:
            - write
            - read
      x-codegen-request-body-name: body
  /config/schema/{client_id}:
    get:
      tags:
        - Config - Schema (Admin Only)
      summary: Get config by ID (ADMIN ONLY)
      description: Returns a single config
      operationId: getSchemaConfigByIdAdmin
      parameters:
        - name: client_id
          in: path
          description: ID of config to return
          required: true
          schema:
            $ref: "#/components/schemas/ClientId"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - admin_oauth2:
            - write
            - read
    put:
      tags:
        - Config - Schema (Admin Only)
      summary: Updates a config in the store (ADMIN ONLY)
      operationId: putSchemaConfigByIdAdmin
      parameters:
        - name: client_id
          in: path
          description: ID of config to return
          required: true
          schema:
            $ref: "#/components/schemas/ClientId"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - client_oauth2:
            - write
            - read
    patch:
      tags:
        - Config - Schema (Admin Only)
      summary: Updates a config in the store (ADMIN ONLY)
      operationId: patchSchemaConfigByIdAdmin
      parameters:
        - name: client_id
          in: path
          description: ID of config to return
          required: true
          schema:
            $ref: "#/components/schemas/ClientId"
      requestBody:
        description: Patch object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchObject"
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - client_oauth2:
            - write
            - read
      x-codegen-request-body-name: body
  /config/theme/{client_id}:
    get:
      tags:
        - Config - Theme (Admin Only)
      summary: Get config by ID (ADMIN ONLY)
      description: Returns a single config
      operationId: getThemeConfigByIdAdmin
      parameters:
        - name: client_id
          in: path
          description: ID of config to return
          required: true
          schema:
            $ref: "#/components/schemas/ClientId"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - admin_oauth2:
            - write
            - read
    put:
      tags:
        - Config - Theme (Admin Only)
      summary: Updates a config in the store (ADMIN ONLY)
      operationId: putThemeConfigByIdAdmin
      parameters:
        - name: client_id
          in: path
          description: ID of config to return
          required: true
          schema:
            $ref: "#/components/schemas/ClientId"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - client_oauth2:
            - write
            - read
    patch:
      tags:
        - Config - Theme (Admin Only)
      summary: Updates a config in the store (ADMIN ONLY)
      operationId: patchThemeConfigByIdAdmin
      parameters:
        - name: client_id
          in: path
          description: ID of config to return
          required: true
          schema:
            $ref: "#/components/schemas/ClientId"
      requestBody:
        description: Patch object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchObject"
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigInit"
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - client_oauth2:
            - write
            - read
      x-codegen-request-body-name: body
components:
  schemas:
    ClientId:
      maxLength: 36
      type: string
      pattern: ^[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$
      example: "77018695-3d4f-43a2-8ac6-4311db0a3d0a"
      readOnly: true
    ClientName:
      maxLength: 32
      pattern: ^[A-Za-z0-9]*$
      type: string
      example: "clientname"
    Application:
      required:
        - app_client_id
        - realm
        - redirectUrl
        - scope
        - tree
        - roles
      type: object
      properties:
        redirectUrl:
          maxLength: 32
          pattern: ^[A-Za-z0-9./-]*$
          type: string
          example: "/app"
        realm:
          maxLength: 32
          pattern: ^[a-zA-Z0-9_ ]*$
          type: string
          example: "realm"
        app_client_id:
          maxLength: 32
          pattern: ^[A-Za-z0-9._-]*$
          type: string
          example: "app_portal_name"
        scope:
          maxLength: 32
          pattern: ^[A-Za-z0-9._:*-]*$
          type: string
          example: "fr:idm:*"
        tree:
          maxLength: 32
          pattern: ^[a-zA-Z0-9_ ]*$
          type: string
          example: "sdkAuthenticationTree"
        roles:
          type: array
          minItems: 1
          maxItems: 99
          items:
            maxLength: 64
            pattern: ^[A-Za-z0-9._/-]*$
            type: string
            example: "role-name"
      additionalProperties: false
    License:
      required:
        - enabled
        - name
      type: object
      properties:
        name:
          maxLength: 64
          pattern: ^[A-Za-z0-9._ :-]*$
          type: string
          example: "Application Name"
        enabled:
          type: boolean
          example: true
        expiration:
          maxLength: 32
          pattern: ^\d{4}(.\d{2}){2}(\s|T)(\d{2}.){2}\d{2}Z$
          type: string
          example: "2025‐01‐12T19:38:53Z"
      additionalProperties: false
    PatchObject:
      type: array
      maxItems: 99
      items:
        required:
          - field
          - operation
          - value
        type: object
        properties:
          operation:
            type: string
            enum:
              - "add"
              - "copy"
              - "increment"
              - "move"
              - "remove"
              - "replace"
              - "transform"
            example: "replace"
          field:
            maxLength: 64
            type: string
            pattern: ^[A-Za-z0-9./-]*$
            example: "fieldName"
          value:
            maxLength: 256
            type: string
            pattern: ^[[A-Za-z0-9]*$
            example: "fieldValue"
        additionalProperties: false
    ListConfigs:
      minItems: 0
      maxItems: 999
      type: array
      items:
        required:
          - client
          - client_id
          - config_types
        type: object
        properties:
          client:
            $ref: "#/components/schemas/ClientName"
          client_id:
            $ref: "#/components/schemas/ClientId"
          config_types:
            minItems: 1
            maxItems: 5
            type: array
            items:
              type: string
              enum:
                - "init"
                - "audit"
                - "lang"
                - "schema"
                - "theme"
            example:
              - "init"
              - "audit"
        additionalProperties: false
    ConfigInit:
      required:
        - baseUrl
        - client
        - client_id
        - nonsecure
        - secure
      type: object
      properties:
        client_id:
          $ref: "#/components/schemas/ClientId"
        client:
          $ref: "#/components/schemas/ClientName"
        baseUrl:
          maxLength: 64
          pattern: ^((http|https):\/\/)?[\w-]+(\.[\w-]+)+([\w.,@?^=%&amp;:\/~+#-]*[\w@?^=%&amp;\/~+#-])*$
          type: string
          example: "https://clientname.idfcloud.net"
          readOnly: true
        secure:
          required:
            - client
            - license
          type: object
          properties:
            client:
              required:
                - displayName
                - support
              type: object
              properties:
                displayName:
                  maxLength: 64
                  pattern: ^[A-Za-z0-9._ :-]*$
                  type: string
                  example: "Formal Client Name"
                support:
                  maxLength: 64
                  pattern: ^[a-zA-Z0-9@._ -]*$
                  type: string
                  example: "support@client.com"
              additionalProperties: false
            license:
              required:
                - audit
                - cpm
                - csr
              type: object
              properties:
                cpm:
                  $ref: "#/components/schemas/License"
                csr:
                  $ref: "#/components/schemas/License"
                audit:
                  $ref: "#/components/schemas/License"
              additionalProperties: false
          additionalProperties: false
        nonsecure:
          type: object
          properties:
            access:
              required:
                - baseUrl
                - name
                - timeout
              type: object
              properties:
                name:
                  maxLength: 64
                  pattern: ^[A-Za-z0-9 @.,_()-]*$
                  type: string
                  example: "Access Management (AM)"
                baseUrl:
                  maxLength: 128
                  pattern: ^((http|https):\/\/)?[\w-]+(\.[\w-]+)+([\w.,@?^=%&amp;:\/~+#-]*[\w@?^=%&amp;\/~+#-])*$
                  type: string
                  example: "https://openam-identityfusion-demo.forgeblocks.com/am"
                timeout:
                  maximum: 30000
                  minimum: 1000
                  type: integer
                  format: int32
                  example: 5000
              additionalProperties: false
            apps:
              type: object
              properties:
                cpm:
                  $ref: "#/components/schemas/Application"
                csr:
                  $ref: "#/components/schemas/Application"
                audit:
                  $ref: "#/components/schemas/Application"
              additionalProperties: false
            identity:
              type: object
              properties:
                name:
                  maxLength: 64
                  pattern: ^[A-Za-z0-9 @.,_()-]*$
                  type: string
                  example: "Identity Management (IDM)"
                baseUrl:
                  maxLength: 128
                  pattern: ^((http|https):\/\/)?[\w-]+(\.[\w-]+)+([\w.,@?^=%&amp;:\/~+#-]*[\w@?^=%&amp;\/~+#-])*$
                  type: string
                  example: "https://openam-identityfusion-demo.forgeblocks.com/openam"
                timeout:
                  maximum: 30000
                  minimum: 1000
                  type: integer
                  format: int32
                  example: 5000
                themePath:
                  maxLength: 128
                  pattern: ^[A-Za-z0-9.,/?_=-]*$
                  type: string
                  example: "/config/ui/themerealm"
                langPath:
                  maxLength: 128
                  pattern: ^[A-Za-z0-9.,/?_=-]*$
                  type: string
                  example: "/config/uilocale/en?_fields=login,shared"
              additionalProperties: false
          additionalProperties: false
      additionalProperties: false
    Error404:
      type: object
      properties:
        code:
          type: integer
          example: 400
        message:
          maxLength: 164
          pattern: ^[a-zA-Z0-9_ ]*$
          type: string
          example: "Object Not Found"
        detail:
          maxLength: 256
          pattern: ^[a-zA-Z0-9_ ]*$
          type: string
          example: "The requested object does not exist"
      additionalProperties: false
    Error:
      type: object
      properties:
        code:
          type: integer
          example: 400
        message:
          maxLength: 164
          pattern: ^[a-zA-Z0-9_ ]*$
          type: string
          example: "Message Error"
        detail:
          maxLength: 256
          pattern: ^[a-zA-Z0-9_ ]*$
          type: string
          example: "Message Detail"
      additionalProperties: false
  securitySchemes:
    client_oauth2:
      type: oauth2
      description: Client OAuth 2.0 Authorization Server
      flows:
        authorizationCode:
          authorizationUrl: https://example.com/oauth/authorize
          tokenUrl: https://example.com/oauth/token
          scopes:
            read: read objects in your account
            write: modify objects in your account
    admin_oauth2:
      type: oauth2
      description: Admin OAuth 2.0 Authorization Server
      flows:
        authorizationCode:
          authorizationUrl: https://example.com/oauth/authorize
          tokenUrl: https://example.com/oauth/token
          scopes:
            read: read objects in all accounts
            write: modify objects in all accounts
